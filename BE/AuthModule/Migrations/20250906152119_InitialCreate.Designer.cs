// <auto-generated />
using System;
using AuthModule.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthModule.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250906152119_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("AuthModule.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("datetime('now')");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 6, 15, 21, 18, 350, DateTimeKind.Utc).AddTicks(9427),
                            Email = "admin@example.com",
                            IsActive = true,
                            PasswordHash = "$2a$11$qhFeWT/KdefbBkdrRtGjbOS94UVpQhg3xhTG5p8DX2cmhpd8IVNNC",
                            UpdatedAt = new DateTime(2025, 9, 6, 15, 21, 18, 350, DateTimeKind.Utc).AddTicks(9749),
                            UserType = "Admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 6, 15, 21, 18, 486, DateTimeKind.Utc).AddTicks(4786),
                            Email = "user@example.com",
                            IsActive = true,
                            PasswordHash = "$2a$11$g7ZNuUk.LUXwcuf8xa.7Y.TQH/huPanhJOsL2REPUMuwmk/lgTS.S",
                            UpdatedAt = new DateTime(2025, 9, 6, 15, 21, 18, 486, DateTimeKind.Utc).AddTicks(4810),
                            UserType = "EndUser",
                            Username = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
